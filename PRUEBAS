#basic
OK_ls
OK_ls -la
OK_/usr/bin/ls
OK_usr/bin/ls
OK_./ls
OK_hello
OK_/usr/bin/hello
OK_./hello
""
.
..
OK_$
OK_./
OK_../
OK_./existing_dir
OK_../fake_dir/
OK_./existing_file
OK_./nonexistant_file
OK_./executable_file
OK_.executable_file
OK_executable_file

#basic-no-env
OK_unset PATH; pwd
OK_unset PATH; echo hello
OK_unset PATH; /usr/bin/ls
OK_unset PATH; usr/bin/ls
OK_unset PATH; ./ls
OK_unset PATH; hello
OK_unset PATH; /usr/bin/hello
OK_unset PATH; ./hello
OK_unset PATH; ""
unset PATH; .
unset PATH; ..
OK_unset PATH; $
unset PATH; ./
unset PATH; ../
unset PATH; ./existing_dir
OK_unset PATH; ../fake_dir/
unset PATH; ./existing_file
OK_unset PATH; ./nonexistant_file
OK_unset PATH; ./executable_file
OK_unset PATH; .executable_file
OK_unset PATH; executable_file

#spaces
OK_"                        "
OK_						     
OK_S_\t\t\t\t\t\t\t\t\t\t      
OK_S_\t\n\r\v\f                
OK_S_       \t    \t\t\t       
OK_ls                        
OK_           ls             
OK_                        ls
OK_S_ls\t\t\t\t\t\t\t\t\t\t\t\t
OK_S_\t\t\t\t\t\tls\t\t\t\t\t\t
OK_S_\t\t\t\t\t\t\t\t\t\t\t\tls
OK_S_\t\t\t\t            \t\tls
OK_      ls         -l     -a
OK_S_\t\tls\t\t\t\t-l\t\t\t\t-a
OK_S_\t    ls\t\t  -l -a\t\t   

#pipes
OK_ls -l | wc -l
OK_cat valid_infile_1 | grep dream
OK_cat valid_infile_1 | grep dream | cat -e
OK_cat valid_infile_1 | grep dream | wc -l
OK_cat valid_infile_1 | grep dream | wc -l | cd x
OK_cat valid_infile_1 | grep dream | wc -l | x
OK_x | cat valid_infile_1 | grep dream | wc -l
OK_cat valid_infile_1 | x | grep dream | wc -l
OK_cat valid_infile_1 | grep dream | x | wc -l
OK_cat /dev/random | head -c 100 | wc -c
OK_x | x | x | x | x
OK_x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x|x
OK_ls | ls | ls
OK_ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls|ls


#quotes
OK_ec""ho test
OK_ec''ho test
OK_""echo test
OK_''echo test
OK_echo"" test
OK_echo'' test
OK_echo "" test
OK_echo '' test
OK_echo "" "" "" test
OK_echo '' '' '' test
OK_echo """""" test
OK_echo '''''' test
OK_echo $USE""R
OK_echo $USE''R
OK_echo ""$USER
OK_echo ''$USER
OK_echo "$"USER
OK_echo '$'USER
echo $""USER
echo $''USER
OK_echo $USER"" ''
OK_echo "cat valid_infile_1 | cat > outfile1"
OK_echo 'cat valid_infile_1 | cat > outfile1'
OK_ls ""
OK_ls '"
OK_ls "'
OK_ls " "
OK_ls " ' "
OK_"ls"
OK_l"s"

#env-variables
OK_$USER
OK_ls $HOME
OK_echo $
echo $$
echo $$$
OK_echo $USER
OK_echo $USE
OK_echo $USE_
OK_echo "$USER"
OK_echo '$USER'
OK_echo "|$USER|"
OK_echo '|$USER|'
OK_echo $USER $USER $USER
OK_echo $USER$USER$USER
OK_echo "$USER $USER $USER"
OK_echo "$USER$USER$USER"
OK_echo '$USER $USER $USER'
OK_echo '$USER$USER$USER'
OK_echo $USERhello
OK_echo hello$USER
OK_echo "$USERhello"
OK_echo "hello$USER"
OK_echo '$USERhello'
OK_echo 'hello$USER'
OK_echo hello $USER
OK_echo hello $NOT_A_VAR $NOT_A_VAR $NOT_A_VAR $USER
OK_echo $NOT_A_VAR $NOT_A_VAR $NOT_A_VAR $USER
OK_echo hello $NOT_A_VAR $NOT_A_VAR $NOT_A_VAR
OK_echo "hello $NOT_A_VAR $NOT_A_VAR $NOT_A_VAR $USER"
OK_export ECHO=echo; $ECHO $ECHO
OK_export L="ls -la"; $L
OK_export L='ls -la'; $L

#syntax
OK_|
OK_||
OK_|||
OK_<
OK_<<
<<<<<<
OK_>
OK_>>
>>>
>>>>>>
ls | OK_errors
OK_S_ls || BONUS
OK_ls | |
OK_| ls
OK_| ls | cat
ls | cat | OK_errors
OK_S_ls || cat BONUS
OK_ls | | cat
fake_cmd | OK_errors
OK_| fake_cmd
OK_S_fake_cmd || ls BONUS
OK_fake_cmd | | ls
OK_S_ls || fake_cmd BONUS
OK_ls | | fake_cmd
OK_ls >>
OK_ls >
OK_ls <
OK_ls <<
OK_ls < |
OK_ls << |
OK_ls > |
OK_ls >> |
OK_ls | <
OK_ls | <<
OK_ls | >
OK_ls | >>
ls > >
ls > >>
ls > <
ls > <<
ls >> >
ls >> >>
ls >> <
ls >> <<
ls < >
ls < >>
ls < <
ls < <<
ls << >
ls << >>
ls << <
ls << <<
ls > >> |
OK_< < valid_infile_1 cat
OK_<< << valid_infile_1 cat
OK_<< < valid_infile_1 cat
OK_< << valid_infile_1 cat
OK_< $FAKE_VAR cat
OK_cat < $FAKE_VAR
OK_cat < $123456
OK_< $USER cat
OK_echo hello | ;

#echo
OK_ECHO
OK_Echo
OK_echo
OK_echo hello
OK_echo hello
OK_echo hello world
OK_echo hello      world
OK_echo                      hello world
OK_echo hello world                
OK_echo helololollllolllolol loollolllololllol lllol  looololololollllloooolll
OK_echo helololollllolllolol                                 loollolllololllol                   lllol                looololololollllloooolll
OK_echo -n
OK_echo -n hello world
OK_echo hello      world
OK_echo                      hello world
OK_echo -n hello world                
OK_echo -n helololollllolllolol loollolllololllol lllol  looololololollllloooolll
OK_echo -n helololollllolllolol                                 loollolllololllol                   lllol                looololololollllloooolll
OK_echo hello -n
OK_             echo                 hello                world
OK_             echo             -n                  hello               world                       
OK_echo a '' b '' c '' d
OK_echo a "" b "" c "" d
OK_echo -n a '' b '' c '' d
OK_echo -n a "" b "" c "" d
OK_echo -nhello world
OK_echo -n -n -n hello world
OK_echo -n -n -nnnn -nnnnm
OK_echo a	-nnnnhello
OK_echo -n -nnn hello -n
OK_echo a	hello -nhello

#echo-no-env
OK_unset PATH; echo hello world
OK_unset PATH; echo $USER
OK_unset PATH; echo $PATH

#env
OK_ENV | sort | grep -v SHLVL | grep -v _=
OK_Env | sort | grep -v SHLVL | grep -v _=
OK_env | sort | grep -v SHLVL | grep -v _=
OK_env | wc -l
OK_env | grep PATH

#env-no-env
unset PATH; env | grep PATH
unset PATH; env | grep USER
unset PATH; env | grep SHELL
unset PATH; env | grep PWD

#export
EXPORT
Export
export ""
export 42
export 42; env | grep 42=
export =
export =; env | grep = | wc -l
export A
export A=; echo $A
export A=a; echo $A
export A=a B=b C=c; echo $A$B$C
export A=a B=b C=c; export A=c B=a C=b; echo $A$B$C
export A=a B=b C=c D=d E=e F=f G=g H=h I=i J=j K=k L=l M=m N=n O=o P=p Q=q R=r S=s T=t U=u V=v W=w X=x Y=y Z=z; echo $A$B$C$D$E$F$G$H$I$J$K$L$M$N$O$P$Q$R$S$T$U$V$W$X$Y$Z
OK_export A==a; echo $A
OK_export A===a; echo $A
OK_export A====a; echo $A
OK_export A=====a; echo $A
OK_export A======a; echo $A
OK_export A=a=a=a=a=a; echo $A
OK_export HELLOWORLD=a; echo $HELLOWORLD
OK_export helloworld=a; echo $helloworld
OK_export hello_world=a; echo $hello_world
OK_export HELLOWORLD1=a; echo $HELLOWORLD1
OK_export H1ELL_0_W123Orld_a=a; echo $H1ELL_0_W123Orld_a
OK_export a0123456789=a; echo $a0123456789
OK_export abcdefghijklmnopqrstuvwxyz=a; echo $abcdefghijklmnopqrstuvwxyz
OK_export __________________________=a; echo $__________________________
OK_export _hello_=a; echo $_hello_
OK_export 1
OK_export 1=
OK_export 1=a
OK_export HELLOWORLD =a
OK_export HELLOWORLD= a
OK_export HELLO'WORLD'=a
OK_export HELLO"WORLD"=a
OK_export HELLO$WORLD=a
OK_export HELLO_WORLD=a
OK_export A='hello this world is wonderful'; echo $A
OK_export A="hello this world is wonderful"; echo $A
export A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C; echo $A$B$C
export 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C; echo $A$B$C
export A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf '; echo $A$B$C
export A B C; echo $A$B$C
OK_export 'HELLO@'=hello
OK_export "HELLO'"=hello
OK_export 'HELLO"'=hello
OK_export 'HELLO$'=hello
OK_export 'HELLO!'=hello
OK_export 'HELLO|'=hello
OK_export 'HELLO&'=hello
OK_export 'HELLO\\'=hello
OK_export ALPHA="abc def ghi"; echo $ALPHA
OK_export ALPHA='abc def ghi'; echo $ALPHA
OK_export DIGITS="0 1 2 3 4 5 6 7 8 9"; echo $DIGITS
OK_export DIGITS='0 1 2 3 4 5 6 7 8 9'; echo $DIGITS
OK_export DIGITS=0 1 2 3 4 5 6 7 8 9; echo $DIGITS

#export-no-env
unset PATH; export hello=42
unset PATH; export 42=hello
unset PATH; export hello=42; echo $hello
unset PATH; export PATH=/usr/bin:/sbin/; ls

#unset
UNSET
Unset
unset
unset PATH
unset PATH USER; echo $PATH; echo $USER
unset PATH; echo $PATH
unset PATH; ls
unset NOT_A_VAR
unset ""
unset ''
export A=a; unset A; echo $A
export A=a A2=a; unset A; echo $A $A2
export A=a; unset 'A '; echo $A
export A=a; unset A=; echo $A
export A=a; unset 'A='; echo $A
export A=a B=b C=c; unset A B C; echo $A$B$C
export A=a B=b C=c; unset A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C
export A=a B=b C=c; unset A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C; echo $A$B$C
export A=a B=b C=c; unset 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C
export A=a B=b C=c; unset 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf ' C; echo $A$B$C
export A=a B=b C=c; unset A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf '
export A=a B=b C=c; unset A 'asdf ' B ' asdf asdf asd f' ' asdf ' '' 'asdf '; echo $A$B$C
export A=a B=b C=c; unset A
export A=a B=b C=c; unset A; echo $A$B$C
export A=a B=b C=c; unset B
export A=a B=b C=c; unset B; echo $A$B$C
export A=a B=b C=c; unset C
export A=a B=b C=c; unset C; echo $A$B$C
unset 'HELLO@'
unset "HELLO'"
unset 'HELLO"'
unset 'HELLO$'
unset 'HELLO!'
unset 'HELLO|'
unset 'HELLO&'
unset 'HELLO\\'

#unset-no-env
unset PATH
unset PATH; export hello=42; unset hello
unset PATH; export hello=42; unset hello; echo $hello
unset PATH; unset USER

#pwd
PWD
Pwd
pwd
pwd | cat -e
pwd hello
pwd 123
pwd 1 2 x 3 hello
pwd .
pwd ..
unset PWD; pwd | cat -e
unset OLDPWD; pwd | cat -e
unset PWD OLDPWD; pwd | cat -e
export PWD='hello/world'; pwd | cat -e
export PWD='/hello/world/'; pwd | cat -e
export PWD='/usr/bin/'; pwd | cat -e
export OLDPWD=abc/def; pwd | cat -e
export PWD=hello/world OLDPWD=abc/def; pwd | cat -e
mkdir a a/b; cd a/b; rm -rf ../../a; pwd

#pwd-no-env
unset PATH; pwd
unset PATH; pwd
unset PATH; unset PWD; pwd
unset PATH; unset OLDPWD; pwd
unset PATH; unset PWD OLDPWD; pwd
unset PATH; export PWD='hello/world'; pwd
unset PATH; export PWD='/hello/world/'; pwd
unset PATH; export PWD='/usr/bin/'; pwd

#cd
CD
CD; pwd
Cd
Cd; pwd
cd
cd; pwd
cd .
cd .; pwd
cd ..
cd ..; pwd
cd existing_dir
cd existing_dir; pwd
cd /dev
cd /dev; pwd
cd /Users
cd /Users; pwd
cd fake_dir
cd fake_dir; pwd
cd forbidden_dir
cd forbidden_dir; pwd
cd existing_file
cd existing_file; pwd
cd forbidden_file
cd forbidden_file; pwd
cd ../../../../../../../../../../../../../../../../../../../../../../
cd ../../../../../../../../../../../../../../../../../../../../../../; pwd
cd $HOME
cd $HOME; pwd
unset HOME; cd $HOME
unset HOME; cd $HOME; pwd
unset HOME; cd
unset HOME; cd; pwd
mkdir a a/b; cd a/b; rm -rf ../../a; cd ..
mkdir a a/b; cd a/b; rm -rf ../../a; unset PWD OLDPWD; cd ..

#cd-no-env
unset PATH; cd
unset PATH; cd; pwd
unset PATH; cd .
unset PATH; cd .; pwd
unset PATH; cd ..
unset PATH; cd ..; pwd
unset PATH; cd existing_dir
unset PATH; cd existing_dir; pwd
unset PATH; cd /dev
unset PATH; cd /dev; pwd
unset PATH; cd /Users
unset PATH; cd /Users; pwd
unset PATH; cd fake_dir
unset PATH; cd fake_dir; pwd
unset PATH; cd forbidden_dir
unset PATH; cd forbidden_dir; pwd
unset PATH; cd existing_file
unset PATH; cd existing_file; pwd
unset PATH; cd forbidden_file
unset PATH; cd forbidden_file; pwd
unset PATH; cd $HOME
unset PATH; cd $HOME; pwd
unset PATH; unset HOME; cd $HOME
unset PATH; unset HOME; cd $HOME; pwd
unset PATH; unset HOME; cd
unset PATH; unset HOME; cd; pwd

#exit
exit
Exit
EXIT
exit 42
exit 42; echo "Should have exited."
exit 240
exit +42
exit -42
exit 00000000000000000000000000000000000000000000001
exit 00000000000000000000000000000000000000000000000
exit -00000000000000000000000000000000000000000000001
exit -00000000000000000000000000000000000000000000000
exit abc
exit abc; echo "Should have exited."
exit --42
exit ++42
exit - 42
exit + 42
exit "0"
exit '0'
exit ""
exit ''
exit " "
exit ' '
exit ' 5'
exit '\t5'
exit '\t\f\r5'
exit '5 '
exit '5\t'
exit '5\t\f\r'
exit '5     x'
exit '5\t\t\tx'
exit 42 41
exit 42 abc
exit abc 42
exit 2147483647
exit 2147483648
exit -2147483648
exit -2147483649
exit 9223372036854775807
exit -9223372036854775808
exit 9223372036854775808
exit -9223372036854775810
exit 9999999999999999999999999999999999999999999999
exit -9999999999999999999999999999999999999999999999
exit _0
exit 0_
exit 5 < valid_infile_1
exit 1 | exit 0
exit 0 | exit 1
ls | exit
ls | exit 42
ls | exit 12 abc
ls | exit abc 12
exit | ls
exit 42 | ls
exit 12 abc | ls
exit abc 12 | ls
ls > file | exit
ls -l > x | exit | wc -l

#exit-no-env
unset PATH; exit
unset PATH; exit 42
unset PATH; exit 42; echo "Should have exited."
unset PATH; exit +42
unset PATH; exit -42
unset PATH; exit 00000000000000000000000000000000000000000000001
unset PATH; exit 00000000000000000000000000000000000000000000000
unset PATH; exit abc
unset PATH; exit abc; echo "Should have exited."
unset PATH; exit --42
unset PATH; exit ++42
unset PATH; exit - 42
unset PATH; exit + 42
unset PATH; exit 9999999999999999999999999999999999999999999999
unset PATH; exit -9999999999999999999999999999999999999999999999

#infile
< valid_infile_1 cat
<valid_infile_1 cat
cat < valid_infile_1
cat <valid_infile_1
< valid_infile_1; echo $?
< file_does_not_exist
< forbidden_file
cat <
cat < file_does_not_exist
cat < file_does_not_exist
< file_does_not_exist cat
<file_does_not_exist cat
cat < forbidden_file
cat <forbidden_file
< forbidden_file cat
<forbidden_file cat
< file_does_not_exist < valid_infile_1 cat
cat < valid_infile_1 < file_does_not_exist
cat < valid_infile_1 < valid_infile_1 < valid_infile_1
cat < valid_infile_1 <
cat < valid_infile_1 < valid_infile_2
<valid_infile_1 cat < valid_infile_2
cat << < valid_infile_1
cat << << valid_infile_1
cat <<<< valid_infile_1
cat < forbidden_file < valid_infile_1
cat < valid_infile_1 < forbidden_file
cat < forbidden_file | cat < valid_infile_1
cat < valid_infile_1 | cat < forbidden_file

#outfile-trunc
> outfile1; echo $?
> forbidden_file; echo $?
echo hello world >
echo hello world > outfile1
echo abcdefghijk >outfile1
echo hello world> outfile1
> outfile1 echo abcdefghijk
>outfile1 echo hello world
echo hello world > forbidden_file
> outfile1 echo hi | echo bye
echo ab | echo cde > outfile1
cat valid_infile_1 > outfile1
cat valid_infile_1 | wc -l > outfile1
cat valid_infile_1 | grep dream | sed s/e/../g | sed s/d/X/g > outfile1
echo abcdefghijk > outfile1 > outfile2
echo hello world > outfile1 > outfile1
echo hello world > outfile1 > outfile1 > outfile1 > outfile1 > outfile1 > outfile1
echo hello world > outfile1 > outfile1 > outfile1 > outfile1 > outfile1 > outfile2
echo abcdefghijk > forbidden_file > outfile1 > outfile2
echo abcdefghijk > outfile1 > forbidden_file > outfile2
echo abcdefghijk > outfile1 > outfile2 > forbidden_file
echo > outfile1 a b c d e
echo a > outfile1 b c d e
echo a b > outfile1 c d e
echo a b c > outfile1 d e
echo a b c d > outfile1 e
echo a b c d e > outfile1
echo > outfile1 a b c d e > outfile2
echo a > outfile1 b c d e > outfile2
echo a b > outfile1 c d e > outfile2
echo a b c > outfile1 d e > outfile2
echo a b c d > outfile1 e > outfile2
echo a b c d e > outfile1 > outfile2
echo hello > outfile1 | echo world > outfile1
echo 01234 > outfile1 | echo 56789 > outfile2
echo hello > outfile1 | echo world > forbidden_file
echo 01234 > forbidden_file | echo 56789 > outfile1

#outfile-append
>> outfile1; echo $?
>> forbidden_file; echo $?
echo hello world >>
echo hello world >> outfile1
echo abcdefghijk >>outfile1
echo hello world>> outfile1
>> outfile1 echo abcdefghijk
>>outfile1 echo hello world
echo hello world >> forbidden_file
>> outfile1 echo hi | echo bye
echo ab | echo cde >> outfile1
cat valid_infile_1 >> outfile1
cat valid_infile_1 | wc -l >> outfile1
cat valid_infile_1 | grep dream | sed s/e/../g | sed s/d/X/g >> outfile1
echo abcdefghijk >> outfile1 >> outfile2
echo hello world >> outfile1 >> outfile1
echo hello world >> outfile1 >> outfile1 >> outfile1 >> outfile1 >> outfile1 >> outfile1
echo hello world >> outfile1 >> outfile1 >> outfile1 >> outfile1 >> outfile1 >> outfile2
echo abcdefghijk >> forbidden_file >> outfile1 >> outfile2
echo abcdefghijk >> outfile1 >> forbidden_file >> outfile2
echo abcdefghijk >> outfile1 >> outfile2 >> forbidden_file
echo >> outfile1 a b c d e
echo a >> outfile1 b c d e
echo a b >> outfile1 c d e
echo a b c >> outfile1 d e
echo a b c d >> outfile1 e
echo a b c d e >> outfile1
echo >> outfile1 a b c d e >> outfile2
echo a >> outfile1 b c d e >> outfile2
echo a b >> outfile1 c d e >> outfile2
echo a b c >> outfile1 d e >> outfile2
echo a b c d >> outfile1 e >> outfile2
echo a b c d e >> outfile1 >> outfile2
echo hello >> outfile1 | echo world >> outfile1
echo 01234 >> outfile1 | echo 56789 >> outfile2
echo hello >> outfile1 | echo world >> forbidden_file
echo 01234 >> forbidden_file | echo 56789 >> outfile1

#infile-outfile
< >> >
< > >>
> < >>
> >> <
>> > <
>> < >
echo hello > outfile1
cat < outfile1 >
cat < outfile1 >>
cat < > outfile1
cat < >> outfile1
cat > >> outfile1
cat >> > outfile1
< outfile1 cat > outfile1
< outfile1 cat >> outfile1
cat > outfile1 < outfile1
cat >> outfile1 < outfile1
cat < outfile1 > outfile1
cat < outfile1 >> outfile1
echo ABC > outfile1 | echo DEF >> outfile2
echo GHI >> outfile1 | echo KLM > outfile2
echo OPQ > outfile1 >> outfile2
echo RST >> outfile1 > outfile2
< valid_infile_1 cat | echo UVW > outfile1 | echo XYZ >> outfile2
< valid_infile_1 cat > outfile1 | echo ABC >> outfile1 | echo DEF > outfile2
< valid_infile_1 < valid_infile_2 cat > outfile1 >> outfile2
< valid_infile_1 < valid_infile_2 cat >> outfile1 > outfile2
< forbidden_file < valid_infile_2 cat > outfile1 >> outfile2
< valid_infile_1 < forbidden_file cat > outfile1 >> outfile2
< valid_infile_1 < valid_infile_2 cat > forbidden_file >> outfile1
< valid_infile_2 < valid_infile_1 cat > outfile1 >> forbidden_file
< valid_infile_1 < valid_infile_2 cat >> forbidden_file > outfile1
< valid_infile_2 < valid_infile_1 cat >> outfile1 > forbidden_file
< forbidden_file cat > forbidden_file >> forbidden_file
< forbidden_file cat >> forbidden_file > forbidden_file
cat >> forbidden_file > forbidden_file < forbidden_file
< valid_infile_1 cat | grep dream > forbidden_file
< valid_infile_2 cat | grep dream >> forbidden_file
< valid_infile_1 cat >> forbidden_file | wc -l > outfile1
< valid_infile_2 cat > forbidden_file | wc -l >> outfile1
< valid_infile_1 cat >> outfile1 | wc -l > forbidden_file
< valid_infile_2 cat > outfile1 | wc -l >> forbidden_file

#exit-status
echo $?
echo; echo $?
$?
$? + $?
$?; echo $?
fakecmd; echo $?
cat < file_does_not_exist; echo $?
cat < forbidden_file; echo $?
./forbidden_file; echo $?
cd existing_dir; echo $?
cd forbidden_dir; echo $?
cd dir_does_not_exist; echo $?
cd file_does_not_exist; echo $?
cd valid_infile_1; echo $?
ls dir_does_not_exist; echo $?



10/11/12// ""  .  .. = "minishell: $ARG permission denied" y no "$ARG: command not found"

14/15// ./  ../  == "minishell: $ARG permission denied" y no "$ARG: Is a directory"

16/35/37/38/39// == "minishell: $ARG permission denied" y no "$ARG: Is a directory" 
  // return 127 y no 126

18/41// ./$FICHOS (que existe) == 127 y no 126 (palabras OK)

21// .$EXECUTABLE == "minishell: $EXECUTABLE: No such file or directory" y no "$EXECUTABLE: command not found"

34// . ==permission denied y no "minishell: .: filename argument required"
  // 127 y no 2

76/78// heap buffer overflow ->necesitamos de protectar por un max de FD

100/101// $USER y no USER

117/118// $$ y $$$ y no 4119347 y 4119347$

144/145// export L="ls -la" -> $L = command not found y debria fucionar

153/156/157/184-->199/210// no  bueno mensaje ( no importante)
158/159/163/166// debria abrir un prompt
164/170// debria fucionnar ls || cat , bonus?
200//error | y no error token >>

258-->261 == env es une builtin y funciona cuando es unset PATH, creo aue no es un error, a verificar 